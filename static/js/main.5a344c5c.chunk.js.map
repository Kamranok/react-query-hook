{"version":3,"sources":["components/Navbar.js","components/Planet.js","components/Planets.js","components/Person.js","components/People.js","App.js","index.js"],"names":["Navbar","setPage","onClick","Planet","planet","className","name","population","terrain","fetchPlanets","key","page","a","fetch","res","json","Planets","useState","usePaginatedQuery","resolvedData","latestData","status","old","Math","max","disabled","next","results","map","Person","person","gender","birth_year","fetchPeople","People","useQuery","data","console","log","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAaeA,EAZA,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAChB,OACE,oCACE,6BACE,4BAAQC,QAAS,kBAAMD,EAAQ,aAA/B,WACA,4BAAQC,QAAS,kBAAMD,EAAQ,YAA/B,a,8BCMOE,EAVA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACE,yBAAKC,UAAU,QACb,4BAAKD,EAAOE,MACZ,2CAAiBF,EAAOG,YACxB,wCAAcH,EAAOI,WCHrBC,EAAY,uCAAG,WAAOC,EAAKC,GAAZ,eAAAC,EAAA,sEACDC,MAAM,uCAAD,OAAwCF,IAD5C,cACbG,EADa,yBAEZA,EAAIC,QAFQ,2CAAH,wDA8CHC,EAzCC,WACd,MAAwBC,mBAAS,GAAjC,mBAAON,EAAP,KAAaV,EAAb,KACA,EAIIiB,YAAkB,CAAC,UAAWP,GAAOF,GAHvCU,EADF,EACEA,aACAC,EAFF,EAEEA,WACAC,EAHF,EAGEA,OAIF,OACE,oCACE,6BACE,uCAEY,YAAXA,GACC,6CAGU,UAAXA,GACC,oDAGU,YAAXA,GACC,oCACE,4BAAQnB,QAAS,kBAAMD,GAAQ,SAAAqB,GAAG,OAAIC,KAAKC,IAAIF,EAAM,EAAG,OACtDG,SAAmB,IAATd,GADZ,iBAGA,8BAAOA,GACP,4BAAQT,QAAS,kBAAMD,GAAQ,SAAAqB,GAAG,OAAMF,GAAeA,EAAWM,KAAaJ,EAAM,EAAZA,MACvEG,UAAWL,IAAeA,EAAWM,MADvC,aAGA,6BACGP,EAAaQ,QAAQC,KAAI,SAAAxB,GAAM,OAAI,kBAAC,EAAD,CAAQM,IAAKN,EAAOE,KAAMF,OAAQA,YC7BrEyB,EAVA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACE,yBAAKzB,UAAU,QACb,4BAAKyB,EAAOxB,MACZ,uCAAawB,EAAOC,QACpB,2CAAiBD,EAAOE,cCHxBC,EAAW,uCAAG,4BAAArB,EAAA,sEACAC,MAAM,gCADN,cACZC,EADY,yBAEXA,EAAIC,QAFO,2CAAH,qDA+BFmB,EA1BA,WACb,MAAyBC,YAAS,SAAUF,GAApCG,EAAR,EAAQA,KAAMf,EAAd,EAAcA,OAGd,OAFAgB,QAAQC,IAAIF,GAGV,6BACE,sCAGY,YAAXf,GACC,6CAGU,UAAXA,GACC,oDAGU,YAAXA,GACC,6BACGe,EAAKT,QAAQC,KAAI,SAAAE,GAAM,OAAI,kBAAC,EAAD,CAAQpB,IAAKoB,EAAOxB,KAAMwB,OAAQA,UCJzDS,MAhBf,WACE,MAAwBtB,mBAAS,WAAjC,mBAAON,EAAP,KAAaV,EAAb,KAEA,OACE,oCACE,yBAAKI,UAAU,OACb,8CACA,kBAAC,EAAD,CAAQJ,QAASA,IACjB,yBAAKI,UAAU,YACL,YAATM,EAAqB,kBAAC,EAAD,MAAc,kBAAC,EAAD,SCZ5C6B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.5a344c5c.chunk.js","sourcesContent":["import React from 'react';\nconst Navbar = ({ setPage }) => {\n  return (\n    <>\n      <nav>\n        <button onClick={() => setPage('planets')}>Planets</button>\n        <button onClick={() => setPage('people')}>People</button>\n      </nav>\n\n    </>\n  )\n}\n\nexport default Navbar\n","import React from 'react'\n\nconst Planet = ({ planet }) => {\n  return (\n    <div className=\"card\">\n      <h3>{planet.name}</h3>\n      <p>Population - {planet.population}</p>\n      <p>Terrain - {planet.terrain}</p>\n    </div>\n  )\n}\n\nexport default Planet\n\n","import React, { useState } from 'react';\nimport { usePaginatedQuery } from 'react-query';\nimport Planet from './Planet';\n\nconst fetchPlanets = async (key, page) => {\n  const res = await fetch(`https://swapi.dev/api/planets/?page=${page}`);\n  return res.json();\n}\n\nconst Planets = () => {\n  const [page, setPage] = useState(1)\n  const {\n    resolvedData,\n    latestData,\n    status\n  } = usePaginatedQuery(['planets', page], fetchPlanets);\n\n\n  return (\n    <>\n      <div>\n        <h2>Planets</h2>\n\n        {status === 'loading' && (\n          <div>Loading data</div>\n        )}\n\n        {status === 'error' && (\n          <div>Error fetching data</div>\n        )}\n\n        {status === 'success' && (\n          <>\n            <button onClick={() => setPage(old => Math.max(old - 1, 1))}\n              disabled={page === 1}\n            >Previous Page</button>\n            <span>{page}</span>\n            <button onClick={() => setPage(old => (!latestData || !latestData.next ? old : old + 1))}\n              disabled={!latestData || !latestData.next}\n            >Next Page</button>\n            <div>\n              {resolvedData.results.map(planet => <Planet key={planet.name} planet={planet} />)}\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Planets;","import React from 'react';\n\nconst Person = ({ person }) => {\n  return (\n    <div className=\"card\">\n      <h3>{person.name}</h3>\n      <p>Gender - {person.gender}</p>\n      <p>Birth year - {person.birth_year}</p>\n    </div>\n  );\n}\n\nexport default Person;","import React from 'react';\nimport { useQuery } from 'react-query';\nimport Person from './Person';\n\nconst fetchPeople = async () => {\n  const res = await fetch('http://swapi.dev/api/people/');\n  return res.json();\n}\n\nconst People = () => {\n  const { data, status } = useQuery('people', fetchPeople);\n  console.log(data);\n\n  return (\n    <div>\n      <h2>People</h2>\n      {/* { status } */}\n\n      {status === 'loading' && (\n        <div>Loading data</div>\n      )}\n\n      {status === 'error' && (\n        <div>Error fetching data</div>\n      )}\n\n      {status === 'success' && (\n        <div>\n          {data.results.map(person => <Person key={person.name} person={person} />)}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default People;","import React from 'react';\nimport { useState } from 'react'\nimport Navbar from \"./components/Navbar\";\nimport Planets from \"./components/Planets\"\nimport People from \"./components/People\"\n// import { ReactQueryDevtools } from 'react-query-devtools'\n\n\nfunction App() {\n  const [page, setPage] = useState('planets')\n\n  return (\n    <>\n      <div className=\"App\">\n        <h1>Star Wars Info</h1>\n        <Navbar setPage={setPage} />\n        <div className='content'></div>\n        {page === 'planets' ? <Planets /> : <People />}\n      </div>\n      {/* <ReactQueryDevtools initialIsOpen={false} /> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}